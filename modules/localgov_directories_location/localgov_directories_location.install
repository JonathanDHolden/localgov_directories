<?php

/**
 * @file
 * LocalGovDrupal directories location install file.
 */

use Drupal\Component\Serialization\Yaml;
use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\Core\Entity\Entity\EntityViewDisplay;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\localgov_directories\ConfigurationHelper;
use Drupal\localgov_directories\Constants as Directory;
use Drupal\search_api\Entity\Index as SearchIndex;
use Drupal\search_api\Item\Field as SearchIndexField;
use Drupal\views\Entity\View;

/**
 * Implements hook_install().
 *
 * - Adds location field to search index.
 * - Adds extra displays to the Directory channel view.
 * - Adds the Proximity search configuration field to the Directory channel
 *   form.  Also hides it from entity view.
 */
function localgov_directories_location_install() {
  // Retrieves view display mode config and adds location-related sections to
  // the existing configuration.
  $module_path = \Drupal::service('extension.list.module')->getPath('localgov_directories_location');
  $view_with_map_embed = Yaml::decode(file_get_contents($module_path . '/config/override/views.view.localgov_directory_channel.yml'));
  $view = View::load('localgov_directory_channel');
  if ($view) {
    $display = $view->get('display');
    $display['embed_map'] = $view_with_map_embed['display']['embed_map'];
    $view->set('display', $display);
    $view->save();
  }

  _localgov_directories_location_set_proximity_search_cfg_display();
}

/**
 * Add new map embed display, but do not enable it as default.
 *
 * It is advised that installations remove the old attachment and enable the
 * new map embed field on the directory channel view mode.
 */
function localgov_directories_location_update_8001() {
  // Retrieve view display mode config and add it to the existing configuration.
  $module_path = \Drupal::service('extension.list.module')->getPath('localgov_directories_location');
  $view_with_map_embed = Yaml::decode(file_get_contents($module_path . '/config/override/views.view.localgov_directory_channel.yml'));
  $view = View::load('localgov_directory_channel');
  if ($view) {
    $display = $view->get('display');
    $display['embed_map'] = $view_with_map_embed['display']['embed_map'];
    $view->set('display', $display);
    $view->save();
  }

  // But don't enable it by default. This sets it as disabled before
  // extra fields has even added it.
  $directory_display_modes = \Drupal::service('entity_display.repository')
    ->getViewModeOptionsByBundle('node', 'localgov_directory');
  foreach (array_keys($directory_display_modes) as $display_id) {
    $directory_display = \Drupal::entityTypeManager()
      ->getStorage('entity_view_display')
      ->load('node.localgov_directory.' . $display_id);
    $directory_display->removeComponent('localgov_directory_map')->save();
  }
}

/**
 * Adds proximity search config field to dir channel.
 */
function localgov_directories_location_update_8003() {
  $module_path = \Drupal::service('extension.list.module')->getPath('localgov_directories_location');

  $result = [];
  if (!FieldStorageConfig::loadByName('node', 'localgov_proximity_search_cfg')) {
    $proximity_search_cfg_field_storage = Yaml::decode(file_get_contents($module_path . '/config/install/field.storage.node.localgov_proximity_search_cfg.yml'));
    FieldStorageConfig::create($proximity_search_cfg_field_storage)->save();
  }
  else {
    $result[] = t('Proximity search configuration field already exists.');
  }

  if (!FieldConfig::loadByName('node', 'localgov_directory', 'localgov_proximity_search_cfg')) {
    $proximity_search_cfg_field = Yaml::decode(file_get_contents($module_path . '/config/install/field.field.node.localgov_directory.localgov_proximity_search_cfg.yml'));
    FieldConfig::create($proximity_search_cfg_field)->save();

    _localgov_directories_location_set_proximity_search_cfg_display();
  }
  else {
    $result[] = t('Proximity search configuration field already exists in the directory channel content type.');
  }

  return implode(', ', $result);
}

/**
 * Sets up display for the proximity config field.
 *
 * - Adds the Proximity search config field to the Directory channel form.
 * - Hides it from Directory channel entity view.
 */
function _localgov_directories_location_set_proximity_search_cfg_display(): void {
  $module_path = \Drupal::service('extension.list.module')->getPath('localgov_directories_location');

  // Add Proximity search config field to directory channel form.
  $dir_channel_form_display = EntityFormDisplay::load('node.localgov_directory.default');
  if (!$dir_channel_form_display->getComponent('localgov_proximity_search_cfg')) {
    $localgov_directory_form_display = Yaml::decode(file_get_contents($module_path . '/config/override/core.entity_form_display.node.localgov_directory.default.yml'));

    if (isset($localgov_directory_form_display['content']['localgov_proximity_search_cfg'])) {
      $dir_channel_form_display->setComponent('localgov_proximity_search_cfg', $localgov_directory_form_display['content']['localgov_proximity_search_cfg'])->save();
    }
  }

  // Hide Proximity search config field.
  $dir_channel_view_display = EntityViewDisplay::load('node.localgov_directory.default');
  if (!$dir_channel_view_display->getComponent('localgov_proximity_search_cfg')) {
    $dir_channel_view_display->removeComponent('localgov_proximity_search_cfg')->save();
  }

  // Hide Proximity search config field in teaser view.
  $dir_channel_view_teaser_display = EntityViewDisplay::load('node.localgov_directory.teaser');
  if (!$dir_channel_view_teaser_display->getComponent('localgov_proximity_search_cfg')) {
    $dir_channel_view_teaser_display->removeComponent('localgov_proximity_search_cfg')->save();
  }
}

/**
 * Adds new location field to search index.
 */
function localgov_directories_location_update_8005() {
  Drupal::service('module_installer')->install([
    'search_api_location_views',
    'search_api_location_geocoder',
  ]);

  $index = SearchIndex::load('localgov_directories_index_default');
  if (!$index->getField('localgov_location')) {
    $location_field = new SearchIndexField($index, 'localgov_location');
    $location_field->setLabel('Location » Geo » location');
    $location_field->setDatasourceId('entity:node');
    $location_field->setType('location');
    $location_field->setPropertyPath('localgov_location:entity:location');
    $index->addField($location_field);
    $index->save();
    $index->reindex();
    return t('The directories index has been updated, and a reindex requested. You will need to run an index manually, or wait for it to run on cron, for it to update.');
  }
  else {
    return t('Unable to update search index: localgov_directories_index_default not found.');
  }
}

/**
 * Adds Views proximity search display.
 *
 * Also adds a Facet that relies on this View.
 */
function localgov_directories_location_update_8007() {

  $index = SearchIndex::load('localgov_directories_index_default');
  if ($index->status() && !$index->getField('localgov_location')) {
    return t('The location field has no search index.  We cannot use it in the Directory channel view');
  }

  _localgov_directories_location_add_proximity_search_view_display();
  \Drupal::classResolver(ConfigurationHelper::class)->createFacet(Directory::FACET_CONFIG_ENTITY_ID_FOR_PROXIMITY_SEARCH, Directory::FACET_CONFIG_FILE_FOR_PROXIMITY_SEARCH);

  return t('Added the location field to the Directory channel view.');
}
